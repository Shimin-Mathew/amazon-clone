{"version":3,"sources":["assets/images/amazon-sprite-icons.png","pages/Home.jsx","components/iconSprites.jsx","components/hamburger.jsx","components/logo.jsx","components/search.jsx","layouts/headerMain.jsx","layouts/AppHeader.jsx","layouts/AppFooter.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","HomePage","props","IconSprites","as","style","size","backgroundSize","position","backgroundPosition","height","width","children","Wrapper","backgroundStyle","backgroundImage","sprite","backgroundRepeat","Hamburger","Logo","className","Search","useState","search","setSearch","clearButtonCSSState","length","onSubmit","event","preventDefault","console","log","type","placeholder","onChange","current","currentTarget","value","id","onClick","inputField","parentElement","focus","HeaderMain","SignIn","Cart","href","AppHeader","AppFooter","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"uGAAAA,EAAOC,QAAU,IAA0B,iD,kMCE5B,SAASC,EAASC,GAChC,OAAO,wC,2BCAO,SAASC,EAAT,GAQX,IAAD,IAPFC,UAOE,MAPG,MAOH,MANFC,aAME,MANM,GAMN,MALFC,KAAMC,OAKJ,MALqB,QAKrB,MAJFC,SAAUC,OAIR,MAJ6B,UAI7B,MAHFC,cAGE,MAHO,OAGP,MAFFC,aAEE,MAFM,OAEN,EADFC,EACE,EADFA,SAGMC,EAAUT,EACVU,EAAe,yBACpBJ,SACAC,SACGN,GAHiB,IAIpBU,gBAAgB,OAAD,OAASC,IAAT,KACfP,qBACAF,iBACAU,iBAAkB,cAGnB,OAAO,kBAACJ,EAAD,CAASR,MAAOS,GAAkBF,GCrB3B,SAASM,IACvB,OACC,kBAACf,EAAD,CAAaK,SAAS,iBCFT,SAASW,IACvB,OACC,yBAAKC,UAAU,iBACd,kBAACjB,EAAD,CAAaO,OAAO,OAAOC,MAAM,OAAOH,SAAS,gBACjD,0BAAMY,UAAU,mBAAhB,Q,iBCFY,SAASC,IAAU,IAAD,EACJC,mBAAS,IADL,mBACzBC,EADyB,KACjBC,EADiB,KAG1BC,EADgBF,EAAOG,OAAS,EACK,QAAS,GAkBpD,OACC,0BAAMN,UAAU,aAAaO,SAZ9B,SAAsBC,GACrBA,EAAMC,iBACNC,QAAQC,IAAIR,KAWX,2BAAOS,KAAK,SAASC,YAAY,mBAAmBC,SAlBtD,SAAyBN,GACxB,IAAMO,EAAUP,EAAMQ,cAAcC,MACpCb,EAAUW,IAgBsEE,MAAOd,EAAQe,GAAG,MACjG,4BAAQN,KAAK,SAASZ,UAAS,0BAAqBK,GAAuBc,QAT7E,SAA2BX,GAC1B,IAAMY,EAAaZ,EAAMQ,cAAcK,cAApB,EACnBjB,EAAU,IACVgB,EAAWE,UAMV,KACA,4BAAQtB,UAAU,eACjB,kBAACjB,EAAD,CAAaQ,MAAM,OAAOD,OAAO,OAAOF,SAAS,mB,MCxBtC,SAASmC,EAAWzC,GAClC,OACC,yBAAKoC,GAAG,eACP,kBAACpB,EAAD,MACA,kBAACC,EAAD,MACA,kBAACyB,EAAD,MACA,kBAACC,EAAD,MACA,kBAACxB,EAAD,OAKH,SAASuB,IACR,OACC,uBAAGE,KAAK,WAAW1B,UAAU,wBAA7B,WAIF,SAASyB,IACR,OACC,uBAAGC,KAAK,QAAQ1B,UAAU,YAA1B,QCxBa,SAAS2B,EAAU7C,GACjC,OACC,gCACC,kBAACyC,EAAD,MACA,+BCPY,SAASK,EAAU9C,GACjC,OAAO,KCgBO+C,MAVf,WACE,OACE,oCACE,kBAACF,EAAD,MACA,kBAAC9C,EAAD,MAFF,IAGE,kBAAC+C,EAAD,QCAcE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLrC,QAAQqC,MAAMA,EAAMC,c","file":"static/js/main.af7b29dd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/amazon-sprite-icons.29e79f71.png\";","import React from 'react';\r\n\r\nexport default function HomePage(props) {\r\n\treturn <h1>HomePage</h1>;\r\n}","import React from 'react';\r\nimport sprite from 'assets/images/amazon-sprite-icons.png'\r\n\r\nexport default function IconSprites({\r\n\tas = 'div',\r\n\tstyle = {},\r\n\tsize: backgroundSize = '275px',\r\n\tposition: backgroundPosition = '0px 0px',\r\n\theight = '20px',\r\n\twidth = '20px',\r\n\tchildren\r\n}) {\r\n\r\n\tconst Wrapper = as;\r\n\tconst backgroundStyle = {\r\n\t\theight,\r\n\t\twidth,\r\n\t\t...style,\r\n\t\tbackgroundImage: `url(${sprite})`,\r\n\t\tbackgroundPosition,\r\n\t\tbackgroundSize,\r\n\t\tbackgroundRepeat: 'no-repeat',\r\n\t};\r\n\r\n\treturn <Wrapper style={backgroundStyle}>{children}</Wrapper>;\r\n}","import React from 'react';\r\nimport IconSprites from './iconSprites';\r\n\r\nexport default function Hamburger() {\r\n\treturn (\r\n\t\t<IconSprites position=\"-20px -378px\" />\r\n\t);\r\n}","import React from 'react';\r\nimport IconSprites from './iconSprites';\r\n\r\nexport default function Logo() {\r\n\treturn (\r\n\t\t<div className=\"logo nav-logo\">\r\n\t\t\t<IconSprites height=\"27px\" width=\"80px\" position=\"-10px -50px\" />\r\n\t\t\t<span className=\"nav-logo-locale\">.in</span>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n// style={{padding: '10px 40px 0 20px'}}","import React, {useState} from 'react';\r\nimport IconSprites from './iconSprites';\r\n\r\nimport 'assets/search.css';\r\n\r\nexport default function Search() {\r\n\tconst [search, setSearch] = useState('');\r\n\tconst hasSearchText = search.length > 0;\r\n\tconst clearButtonCSSState = hasSearchText? ' show': '';\r\n\r\n\tfunction handleKeystroke(event) {\r\n\t\tconst current = event.currentTarget.value;\r\n\t\tsetSearch(current);\r\n\t}\r\n\r\n\tfunction handleSearch(event) {\r\n\t\tevent.preventDefault();\r\n\t\tconsole.log(search);\r\n\t}\r\n\r\n\tfunction handleSearchClear(event) {\r\n\t\tconst inputField = event.currentTarget.parentElement['q'];\r\n\t\tsetSearch('');\r\n\t\tinputField.focus();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form className=\"search-box\" onSubmit={handleSearch}>\r\n\t\t\t<input type=\"search\" placeholder=\"Search Amazon.in\" onChange={handleKeystroke} value={search} id=\"q\"/>\r\n\t\t\t<button type=\"button\" className={`btn-search-clear${clearButtonCSSState}`} onClick={handleSearchClear}>x</button>\r\n\t\t\t<button className=\"search-icon\">\r\n\t\t\t\t<IconSprites width=\"27px\" height=\"25px\" position=\"-73px -239px\" />\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t)\r\n}","import React from 'react';\r\nimport Hamburger from 'components/hamburger';\r\nimport Logo from 'components/logo';\r\nimport Search from 'components/search';\r\n\r\nimport 'assets/headerMain.css';\r\n\r\nexport default function HeaderMain(props) {\r\n\treturn (\r\n\t\t<div id=\"header-main\">\r\n\t\t\t<Hamburger />\r\n\t\t\t<Logo />\r\n\t\t\t<SignIn />\r\n\t\t\t<Cart />\r\n\t\t\t<Search />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nfunction SignIn() {\r\n\treturn (\r\n\t\t<a href=\"#sign-in\" className=\"m-left-auto nav-link\">Sign In</a>\r\n\t)\r\n}\r\n\r\nfunction Cart() {\r\n\treturn (\r\n\t\t<a href=\"#cart\" className=\"nav-link\">Cart</a>\r\n\t)\r\n}","import React from 'react';\r\nimport HeaderMain from './headerMain';\r\n\r\nexport default function AppHeader(props) {\r\n\treturn (\r\n\t\t<header>\r\n\t\t\t<HeaderMain />\r\n\t\t\t<div></div>\r\n\t\t</header>\r\n\t);\r\n}","export default function AppFooter(props) {\r\n\treturn null;\r\n}","import React from 'react';\r\nimport './App.css';\r\n\r\nimport HomePage from 'pages/Home';\r\nimport AppHeader from 'layouts/AppHeader';\r\nimport AppFooter from 'layouts/AppFooter';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <AppHeader />\r\n      <HomePage /> {/* TODO: add router, routes here */}\r\n      <AppFooter />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from 'App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}